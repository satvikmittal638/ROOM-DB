package com.example.roomdb;

import androidx.appcompat.app.AppCompatActivity;
import androidx.lifecycle.ViewModelProvider;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewpager2.widget.ViewPager2;

import android.os.Bundle;
import android.view.View;
import android.widget.EditText;

import java.util.ArrayList;
import java.util.List;

public class MainActivity extends AppCompatActivity {
private RecyclerView recyclerView;
private Adapter adapter;
private ViewModel notesViewModel;

private EditText etNewNotes;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        recyclerView=findViewById(R.id.recyclerView);
        etNewNotes=findViewById(R.id.etNotes);

        recyclerView.setHasFixedSize(true);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));
        adapter=new Adapter(this,getPreDefinedList());//A pre-defined list(optional) which is updated later on
        recyclerView.setAdapter(adapter);

        /*
         When your Activity first starts,
         the ViewModelProviders will create the ViewModel.
         When the activity is destroyed, for example through a configuration change,
         the ViewModel persists. When the activity is re-created,
         the ViewModelProviders return the existing ViewModel
         */
//        notesViewModel= new ViewModelProvider(this).get(ViewModel.class);-> this can't create a instance of viewModel
        notesViewModel = new ViewModelProvider(this, new ViewModelProvider.AndroidViewModelFactory(getApplication())).get(ViewModel.class);
        //Everytime a change os observed,a arrayList is generated by the name of notes and is passed to the updateList method of the Adapter
        notesViewModel.getNotes().observe(this,notes->adapter.updateNotesList(notes));


    }

    public void addNewNotes(View view) {
        notesViewModel.insert(new EntityNotes(etNewNotes.getText().toString()));//id is auto-generated
    }


    private List<EntityNotes> getPreDefinedList(){
        List<EntityNotes> preDefinedList=new ArrayList<>();//Runtime Polymorphism
        for(int i=1;i<=5;i++)
        preDefinedList.add(new EntityNotes("I am a note at "+i));

        return preDefinedList;
    }


}